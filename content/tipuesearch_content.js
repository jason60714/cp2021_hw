var tipuesearch = {"pages": [{'title': 'About', 'text': '這是計算機程式課程 2021 Fall 的作業倉儲與網站 template \n \n 你的學號 40923115 \n 網站倉儲:  https://github.com/jason60714/cp2021_hw \n 網站連結:  https://jason60714.github.io/cp2021_hw/ \n 其他與個人或作業相關資料說明或介紹 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Exam', 'text': '', 'tags': '', 'url': 'Exam.html'}, {'title': 'W13', 'text': '', 'tags': '', 'url': 'W13.html'}, {'title': '列出 10 座標', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n !-- 存擋表單開始 --> \n Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n', 'tags': '', 'url': '列出 10 座標.html'}, {'title': '延伸', 'text': '', 'tags': '', 'url': '延伸.html'}, {'title': '上課進度', 'text': '', 'tags': '', 'url': '上課進度.html'}, {'title': '上傳內容', 'text': '', 'tags': '', 'url': '上傳內容.html'}, {'title': '1007', 'text': '1.建立倉儲 \n 2.練習push \n \xa0 \xa0git version \xa0 \xa0cd tmp \xa0 \xa0cd cp2021_hw \xa0 \xa0cms \n \n', 'tags': '', 'url': '1007.html'}, {'title': '1014', 'text': '1.將左右碰撞移動的紅色方塊, 改為先移動到水平畫面中心點位置後, 接著上下碰撞移動 https://gist.githubusercontent.com/jason60714/8d8732335db66a2a43267956fdc4d861/raw/bc7a5ae536139d3183f1a54e435efee96bc83e0d/hw-1 2.讓使用者可以利用按鈕啟動或中斷紅色方塊上下碰撞移動 https://gist.githubusercontent.com/jason60714/f2f9c02a305a15b689a1b81380c2a934/raw/98a85639d26d50f070e914f87952cdd2a4a036f2/hw-1-2 3.英文打字(20 min 44sec) https://gist.githubusercontent.com/jason60714/73cefa34ad4377850c48cac76cfe2759/raw/e093f3d0d0747da60e8f426a30f650899021ffc8/hw-1-3 4.中文打字(10 min 34sec) https://gist.githubusercontent.com/jason60714/4bcdff3c6c6f379704d3b1ce4259eebe/raw/5c25ebc0cce7472d1a7f5da9751e154e2838f73c/hw-1-4 \n', 'tags': '', 'url': '1014.html'}, {'title': '1018', 'text': '1.更改網站連結 \n \n', 'tags': '', 'url': '1018.html'}, {'title': '1024', 'text': '1.下載wink \n \n', 'tags': '', 'url': '1024.html'}, {'title': '1027', 'text': '1.下載shareX \n \n', 'tags': '', 'url': '1027.html'}, {'title': '1031', 'text': '1.學習使用wink \n', 'tags': '', 'url': '1031.html'}, {'title': '1104', 'text': '1.貪食蛇程式 <!-- 導入 brython 程式庫 --> <script src="./../cmsimde/static/brython.js"></script> <script src="./../cmsimde/static/brython_stdlib.js"></script> <!-- 啟動 Brython --> <script>// <![CDATA[ window.onload=function(){ brython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']}); } // ]]></script> <p><!-- 導入 FileSaver 與 filereader --></p> <p> <script type="text/javascript" src="./../cmsimde/static/ace/FileSaver.min.js"></script> <script type="text/javascript" src="./../cmsimde/static/ace/filereader.js"></script> </p> <p><!-- 導入 ace --></p> <p> <script type="text/javascript" src="./../cmsimde/static/ace/ace.js"></script> <script type="text/javascript" src="./../cmsimde/static/ace/ext-language_tools.js"></script> <script type="text/javascript" src="./../cmsimde/static/ace/mode-python3.js"></script> <script type="text/javascript" src="./../cmsimde/static/ace/snippets/python.js"></script> </p> <p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p> <p> <script type="text/javascript">// <![CDATA[ function doSave(storage_id, filename){  var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});  filename = document.getElementById(filename).value  saveAs(blob, filename+".py"); } // ]]></script> </p> <p><!-- 印出版次與關鍵字程式 --></p> <p> <script type="text/python3">// <![CDATA[ from browser import document as doc import ace # 清除畫布 def clear_bd(ev):  bd = doc["brython_div"]  bd.clear() # Brython 3.3.4 內建的 container 名稱為 \'container\' 且 turtle 輸出為 svg 必須使用 div 訂定 id Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" ) # 從 gist 取出程式碼後, 放入 editor 作為 default 程式 def run():  # 利用 get 取下 src 變數值  try:  url = doc.query["src"]  except:  url = "https://gist.githubusercontent.com/40923129/c7c875305c67bde7d23c33c7284a0b23/raw/a3c01ebab29c6a75d2170717cdba954355b963de/snake"  prog = open(url).read() \n # 將程式載入編輯區  Ace.editor.setValue(prog)  Ace.editor.scrollToRow(0)  Ace.editor.gotoLine(0)  # 直接執行程式  #ns = {\'_name_\':\'_main_\'}  #exec(prog, ns)  # 按下 run 按鈕  Ace.run() \n # 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定 doc[\'kw_run\'].bind(\'click\', Ace.run) doc[\'kw_show_console\'].bind(\'click\', Ace.show_console) doc[\'kw_clear_console\'].bind(\'click\', Ace.clear_console) doc[\'clear_bd\'].bind(\'click\', clear_bd) # 呼叫函式執行 run() // ]]></script> </p> <div id="brython_div"></div> <p><!-- 用來顯示程式碼的 editor 區域 --></p> <div id="kw_editor" style="width: 600px; height: 300px;"></div> <p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p> <p>!-- 存擋表單開始 --&gt;</p> <form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text">.py</label> <input onclick="doSave(\'kw_py_src\', \'kw_filename\');" type="submit" value="Save"></form><!-- 存擋表單結束 --> <p></p> <!-- 執行與清除按鈕開始 --> <p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p> <!-- 執行與清除按鈕結束 --> <p></p> <!-- 程式執行 ouput 區 --> <div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console" style="margin: 0px; width: 485px; height: 195px;"></textarea></div> \n', 'tags': '', 'url': '1104.html'}, {'title': '1115', 'text': '期中成績 \n', 'tags': '', 'url': '1115.html'}, {'title': '1201', 'text': '貪食蛇如何避開自己身體持續吃紅點生存 \n', 'tags': '', 'url': '1201.html'}, {'title': '1202', 'text': '倉儲建立 \n w11_1a \n \n config要輸入自己帳號 \n \n 老師參考筆記: https://github.com/mdecourse/cp2021_hw/blob/main/downloads/w11notes.txt \n', 'tags': '', 'url': '1202.html'}, {'title': '1209', 'text': '如何 pull requests \n 下載教科書 \n', 'tags': '', 'url': '1209.html'}, {'title': '1216', 'text': 'w13測驗 \n Run結果 \n \n gist \n \n 延伸座位表參考 \n \n 回報 \n \n', 'tags': '', 'url': '1216.html'}, {'title': '1223', 'text': '查看個人倉儲 \n 更新日期:2021/12/23 \n \n', 'tags': '', 'url': '1223.html'}, {'title': 'HW1', 'text': '', 'tags': '', 'url': 'HW1.html'}, {'title': '自動方塊', 'text': '將左右碰撞移動的紅色方塊, 改為先移動到水平畫面中心點位置後, 接著上下碰撞移動 \n https://gist.githubusercontent.com/jason60714/8d8732335db66a2a43267956fdc4d861/raw/58f78ffe0cfe0c93c8ce6a6eef61ff0435c1fcd5/hw-1 \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n !-- 存擋表單開始 --> \n Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n', 'tags': '', 'url': '自動方塊.html'}, {'title': '手動方塊', 'text': '讓使用者可以利用按鈕啟動或中斷紅色方塊上下碰撞移動 \n https://gist.githubusercontent.com/jason60714/f2f9c02a305a15b689a1b81380c2a934/raw/dfb890ee512ca70cd9b54137977a3280dc5f0366/hw-1-2 \n \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n !-- 存擋表單開始 --> \n Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n', 'tags': '', 'url': '手動方塊.html'}, {'title': 'HW2', 'text': '網站連結： https://jason60714.github.io/cp2021_hw/content/index.html 倉儲連結： https://github.com/jason60714/cp2021_hw \n 1.首先要進到老師的作業倉儲\xa0 https://github.com/mdecourse/cp2021_hw \xa0 \n 2.然後點 Use this template ,並在 Repository name欄位輸入cp2021_hw \n 3.有了遠端的倉儲模板,然後就要把它弄到近端來 \n \xa0 先用 cd tmp\xa0然後用這段指令:git clone --recurse-submodules (你的倉儲網址+.git)/ \n (也可以在倉儲Code按鈕下複製) \n 4.還要 pip install pyopenssl直接打在黑框裡就好 \n 5.最後用cd cp2021_hw 到你的倉儲目錄下 打 cms 開啟動態網站 \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': '\n \n 參考資料: \n https://mde.tw/cp2021/content/Task3.html \n Brython snake 原始來源:  https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b \n https://github.com/mdecourse/snake-Q-Learning \n https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0 \n https://github.com/mdecourse/SnakeQlearning \n https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1 \n https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36 \n https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/ \n https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/ \n 2016_Exploration of Reinforcement Learning to SNAKE.pdf \n train_a_snake_with_reinforceme.pdf \n https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b \n https://github.com/mdecourse/Snake-Reinforcement-Learning \n Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf \n 延伸應用: \n \n \n \n \n https://github.com/mdecourse/snake-ai-pytorch \n', 'tags': '', 'url': 'HW3.html'}, {'title': '手動貪食蛇', 'text': 'gist:\xa0 https://gist.githubusercontent.com/jason60714/6b52ab42a662a85b0e6fda6512612974/raw/d8d8c515112c28f5898c622e4938327712d2ab1b/snake \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n !-- 存擋表單開始 --> \n Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n', 'tags': '', 'url': '手動貪食蛇.html'}, {'title': '自動貪食蛇', 'text': 'gist:\xa0 https://gist.githubusercontent.com/jason60714/5172a8745763adbb88af94c635fa956b/raw/c9e8a6b08f2fc80f0bba8e0939c582705fc8cc8a/snake%2520abc \n \n \n \n \n \n \n \n \n \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n !-- 存擋表單開始 --> \n Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n', 'tags': '', 'url': '自動貪食蛇.html'}, {'title': 'Final Project', 'text': 'Final Project 佔學期成績 30% \n Final Project 必須在 2022.01.05 22:00 之前完成 . \n Final Project 具體項目成果回報區 將於 2021.11.09 開啟, 於  2022.01.05 22:00 關閉 \n 利用 Brython 寫一個會 令人想玩 的網際遊戲. \n 參考章節: \n \n 專題摘要 \n 資料蒐集 \n 設計動機 \n 設計方法 \n 結果與討論 \n 附錄 \n \n 參考資料: \n https://github.com/collections/web-games \n https://github.com/topics/web-game \n https://github.com/topics/browser-game \n https://github.com/leereilly/games \n https://bmsleight.github.io/brython-blocks/ \n https://github.com/mdecourse/brython-blocks \n', 'tags': '', 'url': 'Final Project.html'}, {'title': '期末考試', 'text': '\n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n !-- 存擋表單開始 --> \n Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n', 'tags': '', 'url': '期末考試.html'}, {'title': '期末總結', 'text': '心得 : 這學期學了多工具跟程式，有錄影製作小影片的wink，截圖的share，程式學習了製作h1.2.3 \n \xa0 \xa0 \xa0 \xa0 \xa0分別是自動手動方塊跟手動自動貪食蛇，程式雖然不好懂，了解之後，會發現其實蠻有趣，完成 \n \xa0 \xa0 \xa0 \xa0 \xa0時也都有成就感，感謝老師這學期的教導。\xa0\xa0 \n \n 程式練習影片: \n \n \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n HW1-1 HW1-2 列出十個座標 HW3-1 HW3-2 final1and2 final3 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n \n HW2 \n 網站連結： https://jason60714.github.io/cp2021_hw/content/index.html 倉儲連結： https://github.com/jason60714/cp2021_hw \n 1.首先要進到老師的作業倉儲\xa0 https://github.com/mdecourse/cp2021_hw \xa0 \n 2.然後點 Use this template ,並在 Repository name欄位輸入cp2021_hw \n 3.有了遠端的倉儲模板,然後就要把它弄到近端來 \n \xa0 先用 cd tmp\xa0然後用這段指令:git clone --recurse-submodules (你的倉儲網址+.git)/ \n (也可以在倉儲Code按鈕下複製) \n 4.還要 pip install pyopenssl直接打在黑框裡就好 \n 5.最後用cd cp2021_hw 到你的倉儲目錄下 打 cms 開啟動態網站 \n \n', 'tags': '', 'url': '期末總結.html'}]};