<h1>About</h1>
<p>這是計算機程式課程 2021 Fall 的作業倉儲與網站 template</p>
<hr/>
<p>你的學號 40923115</p>
<p>網站倉儲: <a href="https://github.com/jason60714/cp2021_hw">https://github.com/jason60714/cp2021_hw</a></p>
<p>網站連結: <a href="https://jason60714.github.io/cp2021_hw/">https://jason60714.github.io/cp2021_hw/</a></p>
<p>其他與個人或作業相關資料說明或介紹</p>
<h1>Exam</h1>
<h2>W13</h2>
<h3>列出 10 個座標</h3>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/jason60714/3140695e30bc08f7180898169f9ded4b/raw/6c5b2e5b73b5c19987472a871d1ed0e187164c2b/W13"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'_name_':'_main_'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<div id="brython_div"></div>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p>!-- 存擋表單開始 --&gt;</p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console" style="margin: 0px; width: 485px; height: 195px;"></textarea></div>
<div style="width: 100%; height: 100%;"></div>
<div style="width: 100%; height: 100%;"></div>
<h3>延伸</h3>
<h1>上課進度</h1>
<h2>上傳內容</h2>
<h3>1007</h3>
<p>1.建立倉儲</p>
<p>2.練習push</p>
<p>   git version<br/>   cd tmp<br/>   cd cp2021_hw<br/>   cms</p>
<p><img alt="" height="567" src="/images/cmd_tol44cSPdx.png" width="1085"/></p>
<h3>1014</h3>
<p><span>1.將左右碰撞移動的紅色方塊, 改為先移動到水平畫面中心點位置後, 接著上下碰撞移動</span><br/><a href="https://gist.githubusercontent.com/jason60714/8d8732335db66a2a43267956fdc4d861/raw/bc7a5ae536139d3183f1a54e435efee96bc83e0d/hw-1" rel="nofollow">https://gist.githubusercontent.com/jason60714/8d8732335db66a2a43267956fdc4d861/raw/bc7a5ae536139d3183f1a54e435efee96bc83e0d/hw-1</a><br/><span>2.讓使用者可以利用按鈕啟動或中斷紅色方塊上下碰撞移動</span><br/><a href="https://gist.githubusercontent.com/jason60714/f2f9c02a305a15b689a1b81380c2a934/raw/98a85639d26d50f070e914f87952cdd2a4a036f2/hw-1-2" rel="nofollow">https://gist.githubusercontent.com/jason60714/f2f9c02a305a15b689a1b81380c2a934/raw/98a85639d26d50f070e914f87952cdd2a4a036f2/hw-1-2</a><br/><span>3.英文打字(20 min 44sec)</span><br/><a href="https://gist.githubusercontent.com/jason60714/73cefa34ad4377850c48cac76cfe2759/raw/e093f3d0d0747da60e8f426a30f650899021ffc8/hw-1-3" rel="nofollow">https://gist.githubusercontent.com/jason60714/73cefa34ad4377850c48cac76cfe2759/raw/e093f3d0d0747da60e8f426a30f650899021ffc8/hw-1-3</a><br/><span>4.中文打字(10 min 34sec)</span><br/><a href="https://gist.githubusercontent.com/jason60714/4bcdff3c6c6f379704d3b1ce4259eebe/raw/5c25ebc0cce7472d1a7f5da9751e154e2838f73c/hw-1-4" rel="nofollow">https://gist.githubusercontent.com/jason60714/4bcdff3c6c6f379704d3b1ce4259eebe/raw/5c25ebc0cce7472d1a7f5da9751e154e2838f73c/hw-1-4</a></p>
<h3>1018</h3>
<p>1.更改網站連結</p>
<p><img alt="" height="275" src="/images/chrome_XXo6e5BSXq.png" width="450"/></p>
<h3>1024</h3>
<p>1.下載wink</p>
<p><img alt="" height="851" src="/images/explorer_cwj3qOXHHf.png" width="1007"/></p>
<h3>1027</h3>
<p>1.下載shareX</p>
<p><img alt="" height="831" src="/images/explorer_QrBy3MFfuf.png" width="868"/></p>
<h3>1031</h3>
<p>1.學習使用wink</p>
<h3>1104</h3>
<p>1.貪食蛇程式<br/>&lt;!-- 導入 brython 程式庫 --&gt;<br/>&lt;script src="/static/brython.js"&gt;&lt;/script&gt;<br/>&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;<br/>&lt;!-- 啟動 Brython --&gt;<br/>&lt;script&gt;// &lt;![CDATA[<br/>window.onload=function(){<br/>brython({debug:1, pythonpath:['/static/','./../downloads/py/']});<br/>}<br/>// ]]&gt;&lt;/script&gt;<br/>&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;<br/>&lt;p&gt;<br/>&lt;script type="text/javascript" src="/static/ace/FileSaver.min.js"&gt;&lt;/script&gt;<br/>&lt;script type="text/javascript" src="/static/ace/filereader.js"&gt;&lt;/script&gt;<br/>&lt;/p&gt;<br/>&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;<br/>&lt;p&gt;<br/>&lt;script type="text/javascript" src="/static/ace/ace.js"&gt;&lt;/script&gt;<br/>&lt;script type="text/javascript" src="/static/ace/ext-language_tools.js"&gt;&lt;/script&gt;<br/>&lt;script type="text/javascript" src="/static/ace/mode-python3.js"&gt;&lt;/script&gt;<br/>&lt;script type="text/javascript" src="/static/ace/snippets/python.js"&gt;&lt;/script&gt;<br/>&lt;/p&gt;<br/>&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;<br/>&lt;p&gt;<br/>&lt;script type="text/javascript"&gt;// &lt;![CDATA[<br/>function doSave(storage_id, filename){<br/> var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});<br/> filename = document.getElementById(filename).value<br/> saveAs(blob, filename+".py");<br/>}<br/>// ]]&gt;&lt;/script&gt;<br/>&lt;/p&gt;<br/>&lt;p&gt;&lt;!-- 印出版次與關鍵字程式 --&gt;&lt;/p&gt;<br/>&lt;p&gt;<br/>&lt;script type="text/python3"&gt;// &lt;![CDATA[<br/>from browser import document as doc<br/>import ace<br/># 清除畫布<br/>def clear_bd(ev):<br/> bd = doc["brython_div"]<br/> bd.clear()<br/># Brython 3.3.4 內建的 container 名稱為 'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id<br/>Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )<br/># 從 gist 取出程式碼後, 放入 editor 作為 default 程式<br/>def run():<br/> # 利用 get 取下 src 變數值<br/> try:<br/> url = doc.query["src"]<br/> except:<br/> url = "https://gist.githubusercontent.com/40923129/c7c875305c67bde7d23c33c7284a0b23/raw/a3c01ebab29c6a75d2170717cdba954355b963de/snake"<br/> prog = open(url).read()</p>
<p># 將程式載入編輯區<br/> Ace.editor.setValue(prog)<br/> Ace.editor.scrollToRow(0)<br/> Ace.editor.gotoLine(0)<br/> # 直接執行程式<br/> #ns = {'_name_':'_main_'}<br/> #exec(prog, ns)<br/> # 按下 run 按鈕<br/> Ace.run()</p>
<p># 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定<br/>doc['kw_run'].bind('click', Ace.run)<br/>doc['kw_show_console'].bind('click', Ace.show_console)<br/>doc['kw_clear_console'].bind('click', Ace.clear_console)<br/>doc['clear_bd'].bind('click', clear_bd)<br/># 呼叫函式執行<br/>run()<br/>// ]]&gt;&lt;/script&gt;<br/>&lt;/p&gt;<br/>&lt;div id="brython_div"&gt;&lt;/div&gt;<br/>&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;<br/>&lt;div id="kw_editor" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;<br/>&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;<br/>&lt;p&gt;!-- 存擋表單開始 --&amp;gt;&lt;/p&gt;<br/>&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"&gt;&lt;/form&gt;&lt;!-- 存擋表單結束 --&gt;<br/>&lt;p&gt;&lt;/p&gt;<br/>&lt;!-- 執行與清除按鈕開始 --&gt;<br/>&lt;p&gt;&lt;button id="kw_run"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;<br/>&lt;!-- 執行與清除按鈕結束 --&gt;<br/>&lt;p&gt;&lt;/p&gt;<br/>&lt;!-- 程式執行 ouput 區 --&gt;<br/>&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console" style="margin: 0px; width: 485px; height: 195px;"&gt;&lt;/textarea&gt;&lt;/div&gt;</p>
<h3>1115</h3>
<p>期中成績</p>
<h3>1201</h3>
<p>貪食蛇如何避開自己身體持續吃紅點生存</p>
<h3>1202</h3>
<p>倉儲建立</p>
<p>w11_1a</p>
<p><img alt="" height="207" src="/images/chrome_oTHdr318FP.png" width="355"/></p>
<p>config要輸入自己帳號</p>
<p><img alt="" height="207" src="/images/SciTE_AF5PWwMgyq.png" width="446"/></p>
<p>老師參考筆記:<a href="https://github.com/mdecourse/cp2021_hw/blob/main/downloads/w11notes.txt">https://github.com/mdecourse/cp2021_hw/blob/main/downloads/w11notes.txt</a></p>
<h3>1209</h3>
<p>如何 pull requests</p>
<p>下載教科書</p>
<h3>1216</h3>
<p>w13測驗</p>
<p>Run結果</p>
<p><img alt="" height="432" src="/images/chrome_sFuPRpGUIt.png" width="396"/></p>
<p>gist</p>
<p><img alt="" height="209" src="/images/chrome_lHb15G9Jm3.png" width="402"/></p>
<p>延伸座位表參考</p>
<p><img alt="" height="344" src="/images/chrome_uEuj6MmD44.png" width="407"/></p>
<p>回報</p>
<p><img alt="" height="143" src="/images/chrome_V9kBEn6fPK.png" width="529"/></p>
<h3>1223</h3>
<p>查看個人倉儲</p>
<p style="text-align: right;">更新日期:2021/12/23</p>
<p style="padding-left: 60px;"></p>
<h1>HW1</h1>
<p>HW1 - 網際動畫與 touch typing 佔學期成績 20%.</p>
<p><span style="background-color: #ffff99;">HW1 必須在 2021.10.20 22:00 之前完成</span>.</p>
<p><span style="background-color: #ffff00;">已回報完成</span></p>
<p><a href="https://github.com/mdecourse/cp2021/discussions/8">HW1 具體項目成果回報區</a>將於 2021.09.23 開啟, 於 <span style="background-color: #ff99cc;">2021.10.20 22:00 關閉</span></p>
<ol>
<li>請至 <a href="https://github.com">https://github.com</a> 申請 Github 帳號後, 至 <a href="https://mde.tw/cp2021/content/Task1.html">https://mde.tw/cp2021/content/Task1.html</a>  頁面, 將左右碰撞移動的紅色方塊, 改為先移動到水平畫面中心點位置後, 接著上下碰撞移動.</li>
<li>請將 1. 的程式碼存入個人 Gist 區 (<a href="https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists">說明</a>).</li>
<li>請在 1. 的程式中, 加入與 <a href="https://mde.tw/cp2021/content/Cango.html">Cango 頁面</a> Fourbar 程式碼相同功能的啟動按鈕, 讓使用者可以利用按鈕啟動或中斷紅色方塊上下碰撞移動. 完成後請將程式碼存入個人 Gist 區.</li>
<li>請在 Gist 檔案編輯區, 利用鍵盤輸入 <a href="https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists#about-gists">https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists#about-gists</a> 中的這段英文內容, 請利用手機計時, 大概需要多少時間? 請將此段練習打字的內容與所需時間存入 Gist 檔案中.</li>
<li>請至少練習 key in 這段英文內容三次, 然後看看是否已經了解如何透過電腦鍵盤 touch typing?</li>
<li>接下來請利用中文輸入 <a href="https://ithelp.ithome.com.tw/articles/10206233">https://ithelp.ithome.com.tw/articles/10206233</a> 的第一段中文說明, 請利用手機計時, 大概需要多少時間?</li>
</ol>
<p></p>
<h1>HW2</h1>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/jason60714/5172a8745763adbb88af94c635fa956b/raw/c9e8a6b08f2fc80f0bba8e0939c582705fc8cc8a/snake%2520abc"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'_name_':'_main_'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<div id="brython_div"></div>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p>!-- 存擋表單開始 --&gt;</p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console" style="margin: 0px; width: 485px; height: 195px;"></textarea></div>
<h1>HW3</h1>
<p></p>
<p>HW3 - AI 貪食蛇佔學期成績 30%.</p>
<p><span style="background-color: #ffff99;">HW3 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cp2021/discussions/10">HW3 具體項目成果回報區</a>將於 2021.11.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉</span></p>
<p>網際貪食蛇的逆襲, 誰的<a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">自動執行貪食蛇</a>能夠破紀錄? 目前直覺貪食蛇紀錄為 45 節 (除了蛇身節數外, 應該還要置入出現紅色標的物後的總完食時間).</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/f188098281ecaeedeea484c074ab34a05c3086eb/manual_snake.py">手動執行貪食蛇</a>程式說明與整理.</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">自動執行貪食蛇</a>程式說明與整理.</p>
<p><a href="https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py">自動執行貪食蛇</a>程式的改進.</p>
<h4>參考資料:</h4>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2021/content/Task3.html">https://mde.tw/cp2021/content/Task3.html</a></p>
<p style="padding-left: 30px;">Brython snake 原始來源: <a href="https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b">https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/snake-Q-Learning">https://github.com/mdecourse/snake-Q-Learning</a></p>
<p style="padding-left: 30px;"><a href="https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0">https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/SnakeQlearning">https://github.com/mdecourse/SnakeQlearning</a></p>
<p style="padding-left: 30px;"><a href="https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1">https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1</a></p>
<p style="padding-left: 30px;"><a href="https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36">https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/">https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/</a></p>
<p style="padding-left: 30px;"><a href="https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/">https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2016_Exploration of Reinforcement Learning to SNAKE.pdf">2016_Exploration of Reinforcement Learning to SNAKE.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/train_a_snake_with_reinforceme.pdf">train_a_snake_with_reinforceme.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b">https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/Snake-Reinforcement-Learning">https://github.com/mdecourse/Snake-Reinforcement-Learning</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf">Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf</a></p>
<h4>延伸應用:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PJl4iabBEz0" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5Vy5Dxu7vDs" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/6pJBPPrDO40" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/VGkcmBaeAGM" title="YouTube video player" width="560"></iframe></p>
<p><a href="https://github.com/mdecourse/snake-ai-pytorch">https://github.com/mdecourse/snake-ai-pytorch</a></p>
<h1>Final Project</h1>
<p>Final Project 佔學期成績 30%</p>
<p><span style="background-color: #ffff99;">Final Project 必須在 2022.01.05 22:00 之前完成</span>.</p>
<p><a href="https://github.com/mdecourse/cp2021/discussions/11">Final Project 具體項目成果回報區</a>將於 2021.11.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p>利用 Brython 寫一個會<span style="background-color: #ffff99;">令人想玩</span>的網際遊戲.</p>
<h4>參考章節:</h4>
<ol>
<li><a href="https://www.enago.tw/academy/%E5%A6%82%E4%BD%95%E6%92%B0%E5%AF%AB%E6%91%98%E8%A6%81%EF%BC%9F/">專題摘要</a></li>
<li><a href="https://ctld.ntu.edu.tw/ls/strategy/lecture.php?index=126">資料蒐集</a></li>
<li><a href="http://old.gst.org.tw/WPES/guideline_D-a.htm">設計動機</a></li>
<li><a href="https://wordvice.com.tw/%E5%A6%82%E4%BD%95%E5%AF%AB%E5%A5%BD%E8%AB%96%E6%96%87%E4%B8%AD%E7%9A%84%E3%80%8C%E7%A0%94%E7%A9%B6%E6%96%B9%E6%B3%95%E3%80%8D/">設計方法</a></li>
<li><a href="http://microbiology.scu.edu.tw/MIB/wong/courses/writing/result02.htm">結果與討論</a></li>
<li><a href="https://www.enago.tw/academy/what-you-need-to-know-about-the-manuscript-appendix/">附錄</a></li>
</ol>
<h4>參考資料:</h4>
<p style="padding-left: 30px;"><a href="https://github.com/collections/web-games">https://github.com/collections/web-games</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/topics/web-game">https://github.com/topics/web-game</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/topics/browser-game">https://github.com/topics/browser-game</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/leereilly/games">https://github.com/leereilly/games</a></p>
<p style="padding-left: 30px;"><a href="https://bmsleight.github.io/brython-blocks/">https://bmsleight.github.io/brython-blocks/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/brython-blocks">https://github.com/mdecourse/brython-blocks<br/></a></p>
<h1>期末總結</h1>
<p>1.這學期學習了兩套新的cad軟體，分別是sw、solvespace，在畫圖上已經大致清楚，但solvespace的組合零件的功能要再多多練習。</p>
<p><img alt="" height="334" src="/images/chrome_UwaKALn870.png" width="875"/></p>
<p>2.學習新的工具wink</p>
<p>可以把自己做事的內容截成小短片，方便紀錄也比較有動態感。</p>
<p><img alt="" height="296" src="/images/chrome_HSeRGi0HUm.png" width="546"/></p>
<p>3.<span>coppeliasim</span></p>
<p>學了coppeliasim，如何使用這個軟體來模擬畫出來的<span>四連桿</span>之運動過程。</p>
<p><img alt="" height="349" src="/images/chrome_ZCzLNeoBnC.png" width="547"/></p>
<p></p>
<p></p>